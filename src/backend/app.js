const express = require('express');
const cors = require('cors');
const sequelize = require('./database');
const app = express();

// Configura√ß√µes b√°sicas
app.use(cors({
  origin: 'http://localhost:3000', // Porta padr√£o do React
  methods: ['GET', 'POST', 'PUT', 'DELETE']
})); // Permite conex√£o com o frontend
app.use(express.json()); // Habilita JSON nas requisi√ß√µes

// Rota de teste
app.get('/', (req, res) => {
  res.send('Backend da Gest√£o de Hor√°rios est√° rodando! üöÄ');
});

app.use(express.json()); // Isso √© ESSENCIAL para processar JSON
app.use(express.urlencoded({ extended: true })); // Para forms HTML

const periodoRoutes = require('./routes/periodos');
app.use('/api/admin/periodos', periodoRoutes); // Cria um novo per√≠odo e insere os hor√°rios padr√£o

const configRoutes = require('./routes/configRestricoes');
app.use('/api/admin/config', configRoutes); // Define ou atualiza a data limite para esse per√≠odo

const disciplinaRoutes = require('./routes/disciplinas');
app.use('/api/admin/disciplinas', disciplinaRoutes);

const adminHorarioRoutes = require('./routes/horarioRoutes');
app.use('/api/admin/horarios', adminHorarioRoutes);

const adminRestricoesRoutes = require('./routes/restricoesAdminRoutes');
app.use('/api/admin/restricoes', adminRestricoesRoutes);

const docenteRestricoesRoutes = require('./routes/docente/restricoesDocenteRoutes');
app.use('/api/docente/restricoes', docenteRestricoesRoutes);

const usuarioRoutes = require('./routes/usuarioRoutes');
app.use('/api/admin', usuarioRoutes);

// Importe o agendador
const { iniciarAgendamento } = require('./services/agendador');

// Inicia o agendador quando o servidor come√ßa
if (process.env.NODE_ENV !== 'test') {
  iniciarAgendamento();
}

module.exports = app;
